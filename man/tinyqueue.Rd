% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tinyqueue.R
\name{tinyqueue}
\alias{tinyqueue}
\alias{tinyqueue.default}
\alias{print.tinyqueue}
\alias{format.tinyqueue}
\alias{summary.tinyqueue}
\alias{ensure_queue}
\alias{publish}
\alias{list_messages}
\alias{try_consume}
\alias{ack}
\alias{cleanup}
\title{tinyqueue: A Simple Workqueue Object}
\usage{
tinyqueue(name, ...)

\method{tinyqueue}{default}(name, ...)

\method{print}{tinyqueue}(x, ...)

\method{format}{tinyqueue}(x, ...)

\method{format}{tinyqueue}(x, ...)

ensure_queue(name)

publish(queue, message)

list_messages(queue)

try_consume(queue)

ack(queue, message)

cleanup(queue)
}
\arguments{
\item{name}{character The task name for}

\item{...}{other arguments}

\item{x}{tinyqueue A \code{tinyqueue} object task name for}

\item{queue}{tinyqueue A \code{tinyqueue} object task name for}

\item{message}{object A R object describing a task that is serialized}
}
\description{
Create a \code{tinyqueue} object
}
\details{
A \code{tinyqueue} object manages a job queue for a given and named task,
using either \pkg{Redis} or \pkg{Valkey} as a backend. The (basic)
functionality is modelled after the \pkg{liteq} package.

A \code{tinyqueue} is created and returned by function \code{ensure_queue}.
The function \code{publish_queue}, \code{try_consume} and \code{ack} serve
to, respectively, enqueue a task, dequeue it in order to do the designated
work and then acknowledge completion.  \code{list_message} reports the
status, and \code{cleanup} finalize and cleans up.

The \code{tinyqueue} object has several associated methods to print,
summarize, or format the object.

The functionality takes advantage of package \pkg{RcppRedis} and its
ability to process arbitrary R objects. This allows task descriptions
to be \code{data.frame} or \code{list} objects as needed by the application.
For the same reason, no \sQuote{schema} or alike has to be created as the
queued task objects are self-sufficient as R objects.
}
\examples{
# This requires Redis or Valkey to run
\dontrun{tinyqueue("sometask")}

}
